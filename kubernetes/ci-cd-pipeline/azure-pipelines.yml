trigger:
  branches:
    include:
      - 'microservices'

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageTag: '$(Build.BuildId)'
  registry: '$(DOCKER_REGISTRY)'
  azureSubscription: '$(azureSubscription)'
  resourceGroup: 'azure-devops-aks'
  aksCluster: 'azure-devops-aks'
  services:
    - auth-service
    - config-server
    - eureka-server
    - file-storage
    - gateway
    - job-service
    - notification-service
    - user-service

jobs:
- job: BuildAndPush
  displayName: 'Build and Push Docker Images'
  steps:
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: '$(azureSubscription)'
        KeyVaultName: 'MyKeyVault'
        SecretsFilter: 'dockerRegistryUsername,dockerRegistryPassword'
    
    - script: |
        for service in ${services}; do
          echo "Building and pushing $service"
          docker build -t $(registry)/$service:$(imageTag) $(Build.SourcesDirectory)/$service
          docker push $(registry)/$service:$(imageTag)
        done
      displayName: 'Build and Push Docker Images'

    - script: |
        trivy image --exit-code 1 --severity HIGH,CRITICAL $(registry)/$(imageTag)
      displayName: 'Scan Docker Images for Vulnerabilities'

- job: DeployToAKS
  displayName: 'Deploy to AKS'
  dependsOn: BuildAndPush
  condition: succeeded()
  steps:
    - task: AzureCLI@2
      displayName: 'Get AKS Credentials'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(resourceGroup) --name $(aksCluster)
    
    - task: AzureCLI@2
      displayName: 'Deploy Application to AKS'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          helm upgrade --install $(serviceName)-release $(Build.SourcesDirectory)/charts/$(serviceName) --namespace default --wait

- job: NotifyDeployment
  displayName: 'Notify Deployment Status'
  dependsOn: DeployToAKS
  steps:
    - script: |
        echo "Deployment completed successfully"
      displayName: 'Notify Success'
    - script: |
        echo "Deployment failed"
      displayName: 'Notify Failure'
      condition: failed()
